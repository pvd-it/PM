YUI.add("mock-fix",function(e){var t=e.Lang;e.Mock.expect=function(t,n){t.__expectations||(t.__expectations={});if(n.method){var r=n.method,i=n.args||[],s=typeof n.callCount=="number"?n.callCount:1,o=n.run||function(){},u;t.__expectations[r]=t.__expectations[r]?t.__expectations[r]:[],t.__expectations[r].push(n),n.callCount=s,n.actualCallCount=0,n.args=i,n.run=o;for(u=0;u<i.length;u++)i[u]instanceof e.Mock.Value||(i[u]=e.Mock.Value(e.Assert.areSame,[i[u]],"Argument "+u+" of "+r+"() is incorrect."));t[r]=t[r]?t[r]:function(){var n=t.__expectations[r][0],i,s;if(n.actualCallCount<n.callCount)n.actualCallCount++;else if(n.callCount!==0&&n.actualCallCount===n.callCount)n=t.__expectations[r].shift(),t.__expectations[r].push(n),n=t.__expectations[r][0],n.actualCallCount++;else try{e.Assert.fail("Method "+r+"() should not have been called.")}catch(o){e.Test.Runner._handleError(o)}try{e.Assert.areEqual(n.args.length,arguments.length,"Method "+r+"() passed incorrect number of arguments.");for(s=0,len=n.args.length;s<len;s++)n.args[s].verify(arguments[s]);i=n.run.apply(this,arguments);if(n.error)throw n.error}catch(o){e.Test.Runner._handleError(o)}return n.hasOwnProperty("returns")?n.returns:i}}else n.property&&(t.__expectations[n.property]=n)},e.Mock.verify=function(n){try{for(var r in n.__expectations)if(n.__expectations.hasOwnProperty(r)){var i=n.__expectations[r],s,o,u;if(t.isArray(i))for(s=0,o=i.length;s<o;s++)u=i[s],e.Assert.areEqual(u.callCount,u.actualCallCount,"Method "+u.method+"() wasn't called the expected number of times.");else i.property&&e.Assert.areEqual(i.value,n[i.property],"Property "+i.property+" wasn't set to the correct value.")}}catch(a){e.Test.Runner._handleError(a)}}});
